package recipesearch;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.ButtonModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JList;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import se.chalmers.ait.dat215.lab2.Recipe;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class RecipeSearchView extends javax.swing.JFrame {

    /**
     * Creates new Recipie search view.
     */
    public RecipeSearchView() {
        search = new RecipeSearchController();
        
        initComponents();
        ImageIcon frameIcon = new ImageIcon(
        getClass().getResource("/RecipeSearch/resources/img.png"));
        this.getContentPane().setBackground(Color.white);
        setIconImage(frameIcon.getImage());
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        resultList.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e){
                if (e.getClickCount() == 2){
                    new SingleRecipeView((Recipe)((JList)e.getComponent()).getSelectedValue());
            
                }
            }
        });

        fetchAndDisplayResults();
        
        meatToggleButton.requestFocusInWindow();    
        this.requestFocus();
    }

    //Osäker på om vi vill skapa filter i viewern, eller om vi ska delegera det till RecipeSeachController. (View har all info, men ska ju egentligen inte göra den typen av beräkningar kan jag tycka)


    private String getMainIngredient(){
        ButtonModel tempButton = mainIngrGroup.getSelection();
        
        if (tempButton != null){
            String buttonActionText = tempButton.getActionCommand();
            return buttonActionText;
        }

        return null;

    }
    
    private String getCuisine(){
        ButtonModel tempButton = cuisineGroup.getSelection();
        if (tempButton != null){
            String buttonActionText = tempButton.getActionCommand();
            return buttonActionText;
        }

            return null;

    }
    
    private String getDifficulty(){
        ButtonModel tempButton = difficultyGroup.getSelection();
        if (tempButton != null){
            String buttonActionText = tempButton.getActionCommand();
            return buttonActionText;
        }
        return null;

            
    }
    
    private int getMaxTime(){
        return timeSlider.getValue();
    }
    
    private int getMaxPrice(){
        return priceSlider.getValue();
    }
    
    //Om vi lägger till en funktion för att söka på namn så behöver vi bara skapa en overloaded metod med samma man som tar in en sträng också, alternativ ett annat custom filter.
    private void fetchAndDisplayResults(){
        List<Recipe> results = search.getResults(getDifficulty(), getMaxTime(), getCuisine(), getMaxPrice(), getMainIngredient());
        displayResults(results);
    }
    
    private void displayResults(List<Recipe> results){
        Recipe[] resultArray = new Recipe[results.size()];
        for (int i = 0; i < resultArray.length; i++){
            resultArray[i] = results.get(i);
        }
        resultList.setListData(resultArray);
        resultList.setCellRenderer(new RecipeList());
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainIngrGroup = new javax.swing.ButtonGroup();
        difficultyGroup = new javax.swing.ButtonGroup();
        cuisineGroup = new javax.swing.ButtonGroup();
        layoutPanel = new javax.swing.JPanel();
        meatToggleButton = new javax.swing.JToggleButton();
        fishToggleButton = new javax.swing.JToggleButton();
        chickenToggleButton = new javax.swing.JToggleButton();
        vegToggleButton = new javax.swing.JToggleButton();
        timeSlider = new javax.swing.JSlider();
        priceSlider = new javax.swing.JSlider();
        timeLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        easyDifficultyButton = new javax.swing.JToggleButton();
        swedenKitchenButton = new javax.swing.JToggleButton();
        hardDifficultyButton = new javax.swing.JToggleButton();
        franceKitchenButton = new javax.swing.JToggleButton();
        greeceKitchenButton = new javax.swing.JToggleButton();
        africaKitchenButton = new javax.swing.JToggleButton();
        indiaKitchenButton = new javax.swing.JToggleButton();
        asiaKitchenButton = new javax.swing.JToggleButton();
        timeText = new javax.swing.JTextField();
        mediumDifficultyButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList();
        resetButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("recipesearch/resources/RecipeSearch"); // NOI18N
        setTitle(bundle.getString("Application.title")); // NOI18N
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(null);
        setMinimumSize(null);
        setName("applicationFrame"); // NOI18N

        layoutPanel.setBackground(new java.awt.Color(255, 255, 255));
        layoutPanel.setFocusTraversalPolicyProvider(true);
        layoutPanel.setMaximumSize(null);
        layoutPanel.setMinimumSize(null);

        mainIngrGroup.add(meatToggleButton);
        meatToggleButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        meatToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/cow3.png"))); // NOI18N
        meatToggleButton.setText("Kötträtter");
        meatToggleButton.setToolTipText("Kött");
        meatToggleButton.setActionCommand("Kött");
        meatToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        meatToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        meatToggleButton.setNextFocusableComponent(fishToggleButton);
        meatToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        meatToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainIngrAction(evt);
            }
        });

        mainIngrGroup.add(fishToggleButton);
        fishToggleButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        fishToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/fish3.png"))); // NOI18N
        fishToggleButton.setText("Fiskrätter");
        fishToggleButton.setToolTipText("Fisk");
        fishToggleButton.setActionCommand("Fisk");
        fishToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fishToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fishToggleButton.setNextFocusableComponent(chickenToggleButton);
        fishToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        fishToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainIngrAction(evt);
            }
        });

        mainIngrGroup.add(chickenToggleButton);
        chickenToggleButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        chickenToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/chicken3.png"))); // NOI18N
        chickenToggleButton.setText("Kycklingrätter");
        chickenToggleButton.setToolTipText("Kyckling");
        chickenToggleButton.setActionCommand("Kyckling");
        chickenToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chickenToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chickenToggleButton.setNextFocusableComponent(vegToggleButton);
        chickenToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chickenToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainIngrAction(evt);
            }
        });

        mainIngrGroup.add(vegToggleButton);
        vegToggleButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        vegToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/carrot5.png"))); // NOI18N
        vegToggleButton.setSelected(true);
        vegToggleButton.setText("Vegitariskarätter");
        vegToggleButton.setToolTipText("Vegitariskt");
        vegToggleButton.setActionCommand("Vegetarisk");
        vegToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        vegToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vegToggleButton.setNextFocusableComponent(timeText);
        vegToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        vegToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainIngrAction(evt);
            }
        });

        timeSlider.setMajorTickSpacing(30);
        timeSlider.setMaximum(150);
        timeSlider.setMinorTickSpacing(10);
        timeSlider.setPaintLabels(true);
        timeSlider.setPaintTicks(true);
        timeSlider.setSnapToTicks(true);
        timeSlider.setToolTipText("Beräknad tidsåtgång för receptet");
        timeSlider.setValue(0);
        timeSlider.setMaximumSize(null);
        timeSlider.setMinimumSize(null);
        timeSlider.setName(""); // NOI18N
        timeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeSliderStateChanged(evt);
            }
        });

        priceSlider.setMajorTickSpacing(20);
        priceSlider.setMinorTickSpacing(5);
        priceSlider.setPaintLabels(true);
        priceSlider.setPaintTicks(true);
        priceSlider.setSnapToTicks(true);
        priceSlider.setToolTipText("Totalt pris för hela måltiden");
        priceSlider.setValue(0);
        priceSlider.setMaximumSize(null);
        priceSlider.setMinimumSize(null);
        priceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                priceSliderStateChanged(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        timeLabel.setText("Tid");
        timeLabel.setToolTipText("Beräknad tidsåtgång för receptet");
        timeLabel.setMaximumSize(null);
        timeLabel.setMinimumSize(null);

        priceLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        priceLabel.setText("Pris");
        priceLabel.setToolTipText("Totalt pris för hela måltiden");
        priceLabel.setMaximumSize(null);
        priceLabel.setMinimumSize(null);

        priceText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceText.setText("Allt");
        priceText.setToolTipText("Totalt pris för hela måltiden");
        priceText.setMaximumSize(null);
        priceText.setMinimumSize(null);
        priceText.setName(""); // NOI18N
        priceText.setNextFocusableComponent(easyDifficultyButton);
        priceText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceTextFocusLost(evt);
            }
        });
        priceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTextKeyPressed(evt);
            }
        });

        difficultyGroup.add(easyDifficultyButton);
        easyDifficultyButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        easyDifficultyButton.setText("Enkelt");
        easyDifficultyButton.setToolTipText("Måltider som är enkla att göra");
        easyDifficultyButton.setActionCommand("Lätt");
        easyDifficultyButton.setNextFocusableComponent(mediumDifficultyButton);
        easyDifficultyButton.setPreferredSize(new java.awt.Dimension(216, 160));
        easyDifficultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyAction(evt);
            }
        });

        cuisineGroup.add(swedenKitchenButton);
        swedenKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        swedenKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/sweden_flag_map3.png"))); // NOI18N
        swedenKitchenButton.setText("Svensk mat");
        swedenKitchenButton.setToolTipText("Svensk mat");
        swedenKitchenButton.setActionCommand("Sverige");
        swedenKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        swedenKitchenButton.setMaximumSize(null);
        swedenKitchenButton.setMinimumSize(null);
        swedenKitchenButton.setNextFocusableComponent(franceKitchenButton);
        swedenKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        swedenKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        swedenKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        difficultyGroup.add(hardDifficultyButton);
        hardDifficultyButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        hardDifficultyButton.setText("Svårt");
        hardDifficultyButton.setToolTipText("Måltider som är svåra att göra");
        hardDifficultyButton.setActionCommand("Svår");
        hardDifficultyButton.setMaximumSize(null);
        hardDifficultyButton.setMinimumSize(null);
        hardDifficultyButton.setNextFocusableComponent(swedenKitchenButton);
        hardDifficultyButton.setPreferredSize(new java.awt.Dimension(216, 160));
        hardDifficultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyAction(evt);
            }
        });

        cuisineGroup.add(franceKitchenButton);
        franceKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        franceKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/france3.png"))); // NOI18N
        franceKitchenButton.setText("Fransk mat");
        franceKitchenButton.setToolTipText("Fransk mat");
        franceKitchenButton.setActionCommand("Frankrike");
        franceKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        franceKitchenButton.setMaximumSize(null);
        franceKitchenButton.setMinimumSize(null);
        franceKitchenButton.setNextFocusableComponent(greeceKitchenButton);
        franceKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        franceKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        franceKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        cuisineGroup.add(greeceKitchenButton);
        greeceKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        greeceKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/greece3.png"))); // NOI18N
        greeceKitchenButton.setText("Grekisk mat");
        greeceKitchenButton.setToolTipText("Grekisk mat");
        greeceKitchenButton.setActionCommand("Grekland");
        greeceKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        greeceKitchenButton.setMaximumSize(null);
        greeceKitchenButton.setMinimumSize(null);
        greeceKitchenButton.setName(""); // NOI18N
        greeceKitchenButton.setNextFocusableComponent(africaKitchenButton);
        greeceKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        greeceKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        greeceKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        cuisineGroup.add(africaKitchenButton);
        africaKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        africaKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/africa3.png"))); // NOI18N
        africaKitchenButton.setText("Afrikansk mat");
        africaKitchenButton.setToolTipText("Afrikansk mat");
        africaKitchenButton.setActionCommand("Afrika");
        africaKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        africaKitchenButton.setMaximumSize(null);
        africaKitchenButton.setMinimumSize(null);
        africaKitchenButton.setNextFocusableComponent(indiaKitchenButton);
        africaKitchenButton.setOpaque(true);
        africaKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        africaKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        africaKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        cuisineGroup.add(indiaKitchenButton);
        indiaKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        indiaKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/india3.png"))); // NOI18N
        indiaKitchenButton.setText("Indisk mat");
        indiaKitchenButton.setToolTipText("Insisk mat");
        indiaKitchenButton.setActionCommand("Indien");
        indiaKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        indiaKitchenButton.setMaximumSize(null);
        indiaKitchenButton.setMinimumSize(null);
        indiaKitchenButton.setNextFocusableComponent(asiaKitchenButton);
        indiaKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        indiaKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        indiaKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        cuisineGroup.add(asiaKitchenButton);
        asiaKitchenButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        asiaKitchenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/asia4.png"))); // NOI18N
        asiaKitchenButton.setText("Asiatisk mat");
        asiaKitchenButton.setToolTipText("Asiatisk mat");
        asiaKitchenButton.setActionCommand("Asien");
        asiaKitchenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        asiaKitchenButton.setMaximumSize(null);
        asiaKitchenButton.setMinimumSize(null);
        asiaKitchenButton.setNextFocusableComponent(resultList);
        asiaKitchenButton.setPreferredSize(new java.awt.Dimension(216, 160));
        asiaKitchenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        asiaKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusineAction(evt);
            }
        });

        timeText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timeText.setText("Allt");
        timeText.setToolTipText("Beräknad tidsåtgång för receptet");
        timeText.setMaximumSize(null);
        timeText.setMinimumSize(null);
        timeText.setNextFocusableComponent(priceText);
        timeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                timeTextFocusLost(evt);
            }
        });
        timeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timeTextKeyPressed(evt);
            }
        });

        difficultyGroup.add(mediumDifficultyButton);
        mediumDifficultyButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mediumDifficultyButton.setText("Medelsvårt");
        mediumDifficultyButton.setToolTipText("Måltider som är medelsvåra att göra");
        mediumDifficultyButton.setActionCommand("Mellan");
        mediumDifficultyButton.setMaximumSize(null);
        mediumDifficultyButton.setMinimumSize(null);
        mediumDifficultyButton.setNextFocusableComponent(hardDifficultyButton);
        mediumDifficultyButton.setPreferredSize(new java.awt.Dimension(216, 160));
        mediumDifficultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyAction(evt);
            }
        });

        jScrollPane1.setMaximumSize(null);
        jScrollPane1.setMinimumSize(null);
        jScrollPane1.setPreferredSize(new Dimension((int)(layoutPanel.getSize().getWidth()*0.5),(int)(layoutPanel.getSize().getHeight()-10)));

        resultList.setModel(listModel);
        resultList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultList.setToolTipText("");
        resultList.setMaximumSize(null);
        resultList.setMinimumSize(null);
        resultList.setNextFocusableComponent(resetButton);
        resultList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resultListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(resultList);

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        resetButton.setText("Återställ formulär");
        resetButton.setAutoscrolls(true);
        resetButton.setMaximumSize(null);
        resetButton.setMinimumSize(null);
        resetButton.setPreferredSize(new Dimension(((int)(layoutPanel.getSize().getWidth()*0.5-20)),((int)(layoutPanel.getSize().getHeight()*0.1-10))));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layoutPanelLayout = new javax.swing.GroupLayout(layoutPanel);
        layoutPanel.setLayout(layoutPanelLayout);
        layoutPanelLayout.setHorizontalGroup(
            layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addComponent(meatToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(fishToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chickenToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                        .addGap(5, 5, 5)
                        .addComponent(vegToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layoutPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layoutPanelLayout.createSequentialGroup()
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layoutPanelLayout.createSequentialGroup()
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(africaKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(swedenKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(indiaKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(franceKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(greeceKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(asiaKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layoutPanelLayout.createSequentialGroup()
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(priceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(priceText, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(timeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layoutPanelLayout.createSequentialGroup()
                                .addComponent(easyDifficultyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mediumDifficultyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hardDifficultyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(11, 11, 11)))
                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layoutPanelLayout.setVerticalGroup(
            layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layoutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chickenToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(fishToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(meatToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vegToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9)))
                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(priceText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(easyDifficultyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mediumDifficultyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hardDifficultyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layoutPanelLayout.createSequentialGroup()
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(swedenKitchenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(greeceKitchenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(indiaKitchenButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                        .addComponent(asiaKitchenButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(africaKitchenButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(franceKitchenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layoutPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        mainIngrGroup.clearSelection();
        priceSlider.setValue(0);
        timeSlider.setValue(0);
        difficultyGroup.clearSelection();
        cuisineGroup.clearSelection();
        prevMainIngr = null;
        prevDifficulty = null;
        prevCuisine = null;
        fetchAndDisplayResults();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void difficultyAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyAction
        if ((JToggleButton)evt.getSource() == prevDifficulty){
            difficultyGroup.clearSelection();
            prevDifficulty = null;
        } else prevDifficulty = (JToggleButton)evt.getSource();

        fetchAndDisplayResults();
    }//GEN-LAST:event_difficultyAction

    private void timeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeTextFocusLost
        if(integerInputVerifier.verify(timeText)){
            timeSlider.setValue(Integer.parseInt(timeText.getText()));
        } else if(timeSlider.getValue() == 0){
            timeText.setText("Allt");
        } else {
            timeText.setText(String.valueOf(timeSlider.getValue()));
        }
    
    }//GEN-LAST:event_timeTextFocusLost

    private void cusineAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusineAction
        if ((JToggleButton)evt.getSource() == prevCuisine){
            cuisineGroup.clearSelection();
            prevCuisine = null;
        } else prevCuisine = (JToggleButton)evt.getSource();

        fetchAndDisplayResults();
    }//GEN-LAST:event_cusineAction

    private void priceTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceTextFocusLost
        if(integerInputVerifier.verify(priceText)){
            priceSlider.setValue(Integer.parseInt(priceText.getText()));
        } else if (priceSlider.getValue() == 0){
            priceText.setText("Allt");
        } else {
            priceText.setText(String.valueOf(priceSlider.getValue()));
        }
    
    }//GEN-LAST:event_priceTextFocusLost

    private void priceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_priceSliderStateChanged
        if (priceSlider.getValue() == 0){
            priceText.setText("Allt");
        } else priceText.setText(((Integer)priceSlider.getValue()).toString());
        fetchAndDisplayResults();
    }//GEN-LAST:event_priceSliderStateChanged

    private void timeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSliderStateChanged
        if (timeSlider.getValue() == 0){
            timeText.setText("Allt");
        } else timeText.setText(((Integer)timeSlider.getValue()).toString());
        fetchAndDisplayResults();

    }//GEN-LAST:event_timeSliderStateChanged

    private void mainIngrAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainIngrAction
        if ((JToggleButton)evt.getSource() == prevMainIngr){
            mainIngrGroup.clearSelection();
            prevMainIngr = null;
        } else prevMainIngr = (JToggleButton)evt.getSource();
        fetchAndDisplayResults();
    }//GEN-LAST:event_mainIngrAction

    private void timeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTextKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if(integerInputVerifier.verify(timeText)){
                timeSlider.setValue(Integer.parseInt(timeText.getText()));
            } else if(timeSlider.getValue() == 0){
                timeText.setText("Allt");
            } else {
                timeText.setText(String.valueOf(timeSlider.getValue()));
            }
            ((JTextField)evt.getComponent()).transferFocus();
        }
    }//GEN-LAST:event_timeTextKeyPressed

    private void priceTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if(integerInputVerifier.verify(priceText)){
                priceSlider.setValue(Integer.parseInt(priceText.getText()));
            } else if (priceSlider.getValue() == 0){
                priceText.setText("Allt");
            } else {
                priceText.setText(String.valueOf(priceSlider.getValue()));
            }
            ((JTextField)evt.getComponent()).transferFocus();
        }
    }//GEN-LAST:event_priceTextKeyPressed

    private void resultListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resultListKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            new SingleRecipeView((Recipe)((JList)evt.getComponent()).getSelectedValue());
        }
    }//GEN-LAST:event_resultListKeyPressed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton africaKitchenButton;
    private javax.swing.JToggleButton asiaKitchenButton;
    private javax.swing.JToggleButton chickenToggleButton;
    private javax.swing.ButtonGroup cuisineGroup;
    private javax.swing.ButtonGroup difficultyGroup;
    private javax.swing.JToggleButton easyDifficultyButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JToggleButton fishToggleButton;
    private javax.swing.JToggleButton franceKitchenButton;
    private javax.swing.JToggleButton greeceKitchenButton;
    private javax.swing.JToggleButton hardDifficultyButton;
    private javax.swing.JToggleButton indiaKitchenButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel layoutPanel;
    private javax.swing.ButtonGroup mainIngrGroup;
    private javax.swing.JToggleButton meatToggleButton;
    private javax.swing.JToggleButton mediumDifficultyButton;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JSlider priceSlider;
    private javax.swing.JTextField priceText;
    private javax.swing.JButton resetButton;
    private javax.swing.JList resultList;
    private javax.swing.JToggleButton swedenKitchenButton;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JSlider timeSlider;
    private javax.swing.JTextField timeText;
    private javax.swing.JToggleButton vegToggleButton;
    // End of variables declaration//GEN-END:variables

    private RecipeSearchController search;
    private Recipe[] lastResult;
    private DefaultListModel listModel = new DefaultListModel();
    private JToggleButton prevMainIngr, prevDifficulty, prevCuisine;
    private InputVerifier integerInputVerifier = new integerInputVerifier();
}
